{"ast":null,"code":"var _jsxFileName = \"/Users/ebasic/VisualStudioCode/todo-react-main/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState } from \"react\"; // import './index.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst page_elements = {};\npage_elements.new_task_input_box = document.getElementById(\"new_task_input_box\");\npage_elements.select_all_btn = document.getElementById(\"select_all_btn\");\npage_elements.all_tasks_link = document.getElementById(\"all_tasks\");\npage_elements.active_tasks_link = document.getElementById(\"all_active_tasks\");\npage_elements.completed_tasks_link = document.getElementById(\"all_completed_tasks\");\n\nfunction set_active_task_group(group) {\n  document.getElementById(\"all_completed_tasks\").setAttribute(\"class\", \"nav-link\");\n  document.getElementById(\"all_active_tasks\").setAttribute(\"class\", \"nav-link\");\n  document.getElementById(\"all_tasks\").setAttribute(\"class\", \"nav-link\");\n\n  if (group === \"completed\") {\n    document.getElementById(\"all_completed_tasks\").setAttribute(\"class\", \"nav-link active\");\n  } else if (group === \"active\") {\n    document.getElementById(\"all_active_tasks\").setAttribute(\"class\", \"nav-link active\");\n  } else {\n    document.getElementById(\"all_tasks\").setAttribute(\"class\", \"nav-link active\");\n  }\n}\n\nfunction uidPart() {\n  var part = Math.random() * 46656 | 0;\n  part = (\"000\" + part.toString(36)).slice(-3);\n  return part;\n}\n\nexport function generateUID() {\n  return uidPart() + uidPart();\n}\n\nfunction TaskBox(props) {\n  var checkbox;\n\n  if (props.value.completed) {\n    checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input mt-0\",\n      type: \"checkbox\",\n      \"aria-label\": \"Checkbox for following text input\",\n      id: \"checkbox-\" + props.value.uid.toString(),\n      onChange: props.handleChange,\n      checked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  } else {\n    checkbox = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input mt-0\",\n      type: \"checkbox\",\n      \"aria-label\": \"Checkbox for following text input\",\n      id: \"checkbox-\" + props.value.uid.toString(),\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group mb-3\",\n    id: \"group-\" + props.value.uid.toString(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-text\",\n      children: checkbox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      \"aria-label\": \"Text input with checkbox\",\n      defaultValue: props.value.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TaskBox;\n\nfunction TaskList(props) {\n  _s();\n\n  const results = [];\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  page_elements.new_task_input_box.addEventListener(\"keypress\", event => {\n    if (event.keyCode === 13) {\n      // key code of the keybord key\n      event.preventDefault();\n      enter_key_handler();\n    }\n  });\n\n  function enter_key_handler() {\n    if (page_elements.new_task_input_box.value) {\n      addTask({\n        \"task\": page_elements.new_task_input_box.value,\n        \"completed\": false,\n        \"uid\": generateUID()\n      });\n      page_elements.new_task_input_box.value = \"\";\n    }\n  }\n\n  page_elements.all_tasks_link.addEventListener(\"click\", filterAll);\n  page_elements.active_tasks_link.addEventListener(\"click\", filterActive);\n  page_elements.completed_tasks_link.addEventListener(\"click\", filterCompleted);\n\n  function filterAll() {\n    setFilter('all');\n  }\n\n  function filterActive() {\n    setFilter('active');\n  }\n\n  function filterCompleted() {\n    setFilter('completed');\n  }\n\n  function addTask(new_task) {\n    setTasks(tasks => [...tasks, new_task]);\n  }\n\n  function handleChange(taskId) {\n    setTasks(tasks => {\n      const t = tasks.slice();\n\n      if (document.getElementById(\"checkbox-\" + taskId).checked === true) {\n        for (let task of t) {\n          if (task.uid === taskId) {\n            task.completed = true;\n            break;\n          }\n        }\n      } else {\n        for (let task of t) {\n          if (task.uid === taskId) {\n            task.completed = false;\n            break;\n          }\n        }\n      }\n\n      return t;\n    });\n    console.log(\"New tasks state\", tasks);\n  }\n\n  let t;\n\n  if (filter === 'all') {\n    t = tasks;\n  } else if (filter === 'active') {\n    t = tasks.filter(task => task.completed === false);\n  } else {\n    t = tasks.filter(task => task.completed === true);\n  }\n\n  t.forEach(task => {\n    results.push( /*#__PURE__*/_jsxDEV(TaskBox, {\n      value: task,\n      handleChange: () => handleChange(task.uid)\n    }, task.uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskList, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n\n_c2 = TaskList;\nconst root = ReactDOM.createRoot(document.getElementById(\"task_list\"));\nroot.render( /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 142,\n  columnNumber: 13\n}, this));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskBox\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","ReactDOM","useState","page_elements","new_task_input_box","document","getElementById","select_all_btn","all_tasks_link","active_tasks_link","completed_tasks_link","set_active_task_group","group","setAttribute","uidPart","part","Math","random","toString","slice","generateUID","TaskBox","props","checkbox","value","completed","uid","handleChange","task","TaskList","results","tasks","setTasks","filter","setFilter","addEventListener","event","keyCode","preventDefault","enter_key_handler","addTask","filterAll","filterActive","filterCompleted","new_task","taskId","t","checked","console","log","forEach","push","root","createRoot","render"],"sources":["/Users/ebasic/VisualStudioCode/todo-react-main/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState } from \"react\";\n// import './index.css';\nconst page_elements = {}\npage_elements.new_task_input_box = document.getElementById(\"new_task_input_box\");\npage_elements.select_all_btn = document.getElementById(\"select_all_btn\")\npage_elements.all_tasks_link = document.getElementById(\"all_tasks\")\npage_elements.active_tasks_link = document.getElementById(\"all_active_tasks\")\npage_elements.completed_tasks_link = document.getElementById(\"all_completed_tasks\")\n\n\n\nfunction set_active_task_group(group){\n  document.getElementById(\"all_completed_tasks\").setAttribute(\"class\", \"nav-link\")\n  document.getElementById(\"all_active_tasks\").setAttribute(\"class\", \"nav-link\")\n  document.getElementById(\"all_tasks\").setAttribute(\"class\", \"nav-link\")\n  if (group === \"completed\"){\n      document.getElementById(\"all_completed_tasks\").setAttribute(\"class\", \"nav-link active\")\n  } else if (group === \"active\"){\n      document.getElementById(\"all_active_tasks\").setAttribute(\"class\", \"nav-link active\")\n  } else{\n      document.getElementById(\"all_tasks\").setAttribute(\"class\", \"nav-link active\")\n  }\n}\n\nfunction uidPart(){\n  var part = (Math.random() * 46656) | 0;\n  part = (\"000\" + part.toString(36)).slice(-3);\n  return part\n}\n\nexport function generateUID() {\n  return uidPart() + uidPart();\n}\n\nfunction TaskBox(props){\n  var checkbox;\n  if (props.value.completed){\n    checkbox = <input className=\"form-check-input mt-0\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" id={\"checkbox-\" + props.value.uid.toString()} onChange={props.handleChange} checked></input>\n  } else{\n    checkbox = <input className=\"form-check-input mt-0\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" id={\"checkbox-\" + props.value.uid.toString()} onChange={props.handleChange}></input>\n  }\n  return(\n    <div className=\"input-group mb-3\" id={\"group-\" + props.value.uid.toString()}>\n    <div className=\"input-group-text\">\n      {checkbox}\n    </div>\n    <input type=\"text\" className=\"form-control\" aria-label=\"Text input with checkbox\" defaultValue={props.value.task}></input>\n  </div>\n  )\n}\n\nfunction TaskList(props){\n  const results = []\n  const [tasks, setTasks] = useState([])\n  const [filter, setFilter] = useState('all')\n\n  page_elements.new_task_input_box.addEventListener(\"keypress\", (event)=> {\n    if (event.keyCode === 13) { // key code of the keybord key\n      event.preventDefault();\n    enter_key_handler()\n    }\n  });\n\n  function enter_key_handler(){\n    if (page_elements.new_task_input_box.value){\n        addTask({\"task\": page_elements.new_task_input_box.value, \"completed\": false, \"uid\": generateUID()})\n        page_elements.new_task_input_box.value = \"\"\n    }\n  }\n  \n  page_elements.all_tasks_link.addEventListener(\"click\", filterAll)\n  page_elements.active_tasks_link.addEventListener(\"click\", filterActive)\n  page_elements.completed_tasks_link.addEventListener(\"click\", filterCompleted)\n  \n\n  function filterAll() {\n    setFilter('all');\n  }\n\n  function filterActive() {\n    setFilter('active');\n  }\n\n  function filterCompleted() {\n    setFilter('completed');\n  }\n\n  function addTask(new_task) {\n    setTasks((tasks) => [...tasks, new_task])\n  }\n\n  function handleChange(taskId){\n    setTasks((tasks) => \n    {const t = tasks.slice()\n      if (document.getElementById(\"checkbox-\" + taskId).checked === true){\n      for (let task of t){\n          if (task.uid === taskId){\n              task.completed = true\n              break;\n          }\n      }\n      } else{\n          for (let task of t){\n              if (task.uid === taskId){\n                  task.completed = false\n                  break;\n              }\n          }\n      }\n      return t;\n    })\n    console.log(\"New tasks state\", tasks)  \n  }\n\n  let t;\n  if (filter === 'all') {\n     t = tasks\n  } else if (filter === 'active') {\n     t = tasks.filter(task => task.completed === false)\n  } else {\n     t = tasks.filter(task => task.completed === true)\n  }\n\n  t.forEach(task => {\n    results.push(\n      <TaskBox key = {task.uid} \n               value = {task}\n               handleChange = {() => handleChange(task.uid)}\n      />\n    )\n  });\n  return (\n    <div>\n      {results}\n    </div>\n  )\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"task_list\"));\nroot.render(<TaskList></TaskList>);"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;AACA,MAAMC,aAAa,GAAG,EAAtB;AACAA,aAAa,CAACC,kBAAd,GAAmCC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAnC;AACAH,aAAa,CAACI,cAAd,GAA+BF,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAA/B;AACAH,aAAa,CAACK,cAAd,GAA+BH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAA/B;AACAH,aAAa,CAACM,iBAAd,GAAkCJ,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAlC;AACAH,aAAa,CAACO,oBAAd,GAAqCL,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAArC;;AAIA,SAASK,qBAAT,CAA+BC,KAA/B,EAAqC;EACnCP,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CO,YAA/C,CAA4D,OAA5D,EAAqE,UAArE;EACAR,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CO,YAA5C,CAAyD,OAAzD,EAAkE,UAAlE;EACAR,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCO,YAArC,CAAkD,OAAlD,EAA2D,UAA3D;;EACA,IAAID,KAAK,KAAK,WAAd,EAA0B;IACtBP,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CO,YAA/C,CAA4D,OAA5D,EAAqE,iBAArE;EACH,CAFD,MAEO,IAAID,KAAK,KAAK,QAAd,EAAuB;IAC1BP,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CO,YAA5C,CAAyD,OAAzD,EAAkE,iBAAlE;EACH,CAFM,MAED;IACFR,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCO,YAArC,CAAkD,OAAlD,EAA2D,iBAA3D;EACH;AACF;;AAED,SAASC,OAAT,GAAkB;EAChB,IAAIC,IAAI,GAAIC,IAAI,CAACC,MAAL,KAAgB,KAAjB,GAA0B,CAArC;EACAF,IAAI,GAAG,CAAC,QAAQA,IAAI,CAACG,QAAL,CAAc,EAAd,CAAT,EAA4BC,KAA5B,CAAkC,CAAC,CAAnC,CAAP;EACA,OAAOJ,IAAP;AACD;;AAED,OAAO,SAASK,WAAT,GAAuB;EAC5B,OAAON,OAAO,KAAKA,OAAO,EAA1B;AACD;;AAED,SAASO,OAAT,CAAiBC,KAAjB,EAAuB;EACrB,IAAIC,QAAJ;;EACA,IAAID,KAAK,CAACE,KAAN,CAAYC,SAAhB,EAA0B;IACxBF,QAAQ,gBAAG;MAAO,SAAS,EAAC,uBAAjB;MAAyC,IAAI,EAAC,UAA9C;MAAyD,cAAW,mCAApE;MAAwG,EAAE,EAAE,cAAcD,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgBR,QAAhB,EAA1H;MAAsJ,QAAQ,EAAEI,KAAK,CAACK,YAAtK;MAAoL,OAAO;IAA3L;MAAA;MAAA;MAAA;IAAA,QAAX;EACD,CAFD,MAEM;IACJJ,QAAQ,gBAAG;MAAO,SAAS,EAAC,uBAAjB;MAAyC,IAAI,EAAC,UAA9C;MAAyD,cAAW,mCAApE;MAAwG,EAAE,EAAE,cAAcD,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgBR,QAAhB,EAA1H;MAAsJ,QAAQ,EAAEI,KAAK,CAACK;IAAtK;MAAA;MAAA;MAAA;IAAA,QAAX;EACD;;EACD,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAkC,EAAE,EAAE,WAAWL,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgBR,QAAhB,EAAjD;IAAA,wBACA;MAAK,SAAS,EAAC,kBAAf;MAAA,UACGK;IADH;MAAA;MAAA;MAAA;IAAA,QADA,eAIA;MAAO,IAAI,EAAC,MAAZ;MAAmB,SAAS,EAAC,cAA7B;MAA4C,cAAW,0BAAvD;MAAkF,YAAY,EAAED,KAAK,CAACE,KAAN,CAAYI;IAA5G;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;KAfQP,O;;AAiBT,SAASQ,QAAT,CAAkBP,KAAlB,EAAwB;EAAA;;EACtB,MAAMQ,OAAO,GAAG,EAAhB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,KAAD,CAApC;EAEAC,aAAa,CAACC,kBAAd,CAAiC+B,gBAAjC,CAAkD,UAAlD,EAA+DC,KAAD,IAAU;IACtE,IAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;MAAE;MAC1BD,KAAK,CAACE,cAAN;MACFC,iBAAiB;IAChB;EACF,CALD;;EAOA,SAASA,iBAAT,GAA4B;IAC1B,IAAIpC,aAAa,CAACC,kBAAd,CAAiCoB,KAArC,EAA2C;MACvCgB,OAAO,CAAC;QAAC,QAAQrC,aAAa,CAACC,kBAAd,CAAiCoB,KAA1C;QAAiD,aAAa,KAA9D;QAAqE,OAAOJ,WAAW;MAAvF,CAAD,CAAP;MACAjB,aAAa,CAACC,kBAAd,CAAiCoB,KAAjC,GAAyC,EAAzC;IACH;EACF;;EAEDrB,aAAa,CAACK,cAAd,CAA6B2B,gBAA7B,CAA8C,OAA9C,EAAuDM,SAAvD;EACAtC,aAAa,CAACM,iBAAd,CAAgC0B,gBAAhC,CAAiD,OAAjD,EAA0DO,YAA1D;EACAvC,aAAa,CAACO,oBAAd,CAAmCyB,gBAAnC,CAAoD,OAApD,EAA6DQ,eAA7D;;EAGA,SAASF,SAAT,GAAqB;IACnBP,SAAS,CAAC,KAAD,CAAT;EACD;;EAED,SAASQ,YAAT,GAAwB;IACtBR,SAAS,CAAC,QAAD,CAAT;EACD;;EAED,SAASS,eAAT,GAA2B;IACzBT,SAAS,CAAC,WAAD,CAAT;EACD;;EAED,SAASM,OAAT,CAAiBI,QAAjB,EAA2B;IACzBZ,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAWa,QAAX,CAAZ,CAAR;EACD;;EAED,SAASjB,YAAT,CAAsBkB,MAAtB,EAA6B;IAC3Bb,QAAQ,CAAED,KAAD,IACT;MAAC,MAAMe,CAAC,GAAGf,KAAK,CAACZ,KAAN,EAAV;;MACC,IAAId,QAAQ,CAACC,cAAT,CAAwB,cAAcuC,MAAtC,EAA8CE,OAA9C,KAA0D,IAA9D,EAAmE;QACnE,KAAK,IAAInB,IAAT,IAAiBkB,CAAjB,EAAmB;UACf,IAAIlB,IAAI,CAACF,GAAL,KAAamB,MAAjB,EAAwB;YACpBjB,IAAI,CAACH,SAAL,GAAiB,IAAjB;YACA;UACH;QACJ;MACA,CAPD,MAOM;QACF,KAAK,IAAIG,IAAT,IAAiBkB,CAAjB,EAAmB;UACf,IAAIlB,IAAI,CAACF,GAAL,KAAamB,MAAjB,EAAwB;YACpBjB,IAAI,CAACH,SAAL,GAAiB,KAAjB;YACA;UACH;QACJ;MACJ;;MACD,OAAOqB,CAAP;IACD,CAlBO,CAAR;IAmBAE,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BlB,KAA/B;EACD;;EAED,IAAIe,CAAJ;;EACA,IAAIb,MAAM,KAAK,KAAf,EAAsB;IACnBa,CAAC,GAAGf,KAAJ;EACF,CAFD,MAEO,IAAIE,MAAM,KAAK,QAAf,EAAyB;IAC7Ba,CAAC,GAAGf,KAAK,CAACE,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACH,SAAL,KAAmB,KAAxC,CAAJ;EACF,CAFM,MAEA;IACJqB,CAAC,GAAGf,KAAK,CAACE,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACH,SAAL,KAAmB,IAAxC,CAAJ;EACF;;EAEDqB,CAAC,CAACI,OAAF,CAAUtB,IAAI,IAAI;IAChBE,OAAO,CAACqB,IAAR,eACE,QAAC,OAAD;MACS,KAAK,EAAIvB,IADlB;MAES,YAAY,EAAI,MAAMD,YAAY,CAACC,IAAI,CAACF,GAAN;IAF3C,GAAgBE,IAAI,CAACF,GAArB;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CAPD;EAQA,oBACE;IAAA,UACGI;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GArFQD,Q;;MAAAA,Q;AAuFT,MAAMuB,IAAI,GAAGnD,QAAQ,CAACoD,UAAT,CAAoBhD,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAApB,CAAb;AACA8C,IAAI,CAACE,MAAL,eAAY,QAAC,QAAD;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}